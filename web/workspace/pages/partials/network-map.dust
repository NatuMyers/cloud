<script type="text/javascript">
var map = new L.Map("map", {
  center: new L.LatLng(40,0),
  zoom: {?size}2{:else}1{/size},
  zoomControl: false,
  detectRetina: true,
  attributionControl: false,
  scale: 2,
  {@ne key=size value="large"}dragging: false,{/ne}
  doubleClickZoom: false,
  boxZoom: false,
  scrollWheelZoom: false
});

var layer = L.tileLayer('{global.tileserver.publicUrl}/{~lb}z{~rb}/{~lb}x{~rb}/{~lb}y{~rb}.png', {
  detectRetina: true,
  noWrap: true,
  bounds: [
    new L.LatLng(-85.0511,-180),
    new L.LatLng(85.0511,180)
  ]
}).addTo(map);

window.onMapLoaded = function (callback) {
  layer.on('load', function () {
    callback();
  });
}

window.addSocketListener = function (event, callback) {
  var connection = new WebSocket('{global.networkMonitor.publicUrl|s}/' + event);

  connection.onopen = function () {
    
  };

  connection.onmessage = function (e) {
    callback(e.data);
  };
}

window.pulseNode = function (data) {
  var existingLayer = document.getElementById(data);

  if (existingLayer) {
    window.animateMarker(existingLayer);
  }
}

window.addHostToMap = function (host) {
  if (!host.geo) return;

  L.marker([host.geo.latitude, host.geo.longitude], {
    icon: L.divIcon({
      className: '',
      html: '<div id="' + host.id + '" class="dadiNode"></div>'
    }),
  }).addTo(map);
}

window.animateMarker = function (geo) {
  if (!geo.classList.contains('dadiNode--pulse')) {
    geo.classList.add('dadiNode--pulse');
    setTimeout(function () {
      geo.classList.remove('dadiNode--pulse');
    }, 2000);
  }
}

window.clearHosts = function () {
  document.querySelectorAll('.dadiNode').forEach(function(node) {
    node.parentNode.removeChild(node);
  });
}

window.onMapLoaded(function () {
  window.addSocketListener('monitor.hosts', function (data) {
    var hosts = JSON.parse(data);
    document.getElementById('host_count').innerHTML = hosts.length;

    window.clearHosts();

    hosts.forEach(function (host) {
      window.addHostToMap(host);
    })
  });

  window.addSocketListener('gateway.queue.size', function (data) {
    document.getElementById('concurrent_requests').innerHTML = data.toString();
  });

  window.addSocketListener('monitor.average_response_time', function (data) {
    document.getElementById('average_response').innerHTML = data.toString();
  });

  window.addSocketListener('gateway.grpc.write_payload.dequeue', function (data) {
    window.pulseNode(data);
  });
});
</script>
